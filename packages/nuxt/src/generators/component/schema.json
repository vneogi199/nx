{
  "$schema": "http://json-schema.org/schema",
  "cli": "nx",
  "$id": "NxNuxtComponent",
  "title": "Create a Nuxt Component",
  "description": "Create a Nuxt Component for Nx.",
  "type": "object",
  "examples": [
    {
      "command": "nx g component my-component --project=myapp",
      "description": "Generate a component in the `myapp` application"
    },
    {
      "command": "nx g component my-component --project=myapp --classComponent",
      "description": "Generate a class component in the `myapp` application"
    }
  ],
  "properties": {
    "project": {
      "type": "string",
      "description": "The name of the project.",
      "alias": "p",
      "$default": {
        "$source": "projectName"
      },
      "x-prompt": "What is the name of the project for this component?",
      "x-priority": "important"
    },
    "name": {
      "type": "string",
      "description": "The name of the component.",
      "$default": {
        "$source": "argv",
        "index": 0
      },
      "x-prompt": "What name would you like to use for the component?",
      "x-priority": "important"
    },
    "skipTests": {
      "type": "boolean",
      "description": "When true, does not create `spec.ts` test files for the new component.",
      "default": false,
      "x-priority": "internal"
    },
    "flat": {
      "type": "boolean",
      "description": "Create component at the source root rather than its own directory.",
      "default": false
    },
    "directory": {
      "type": "string",
      "description": "Create the component under this directory (can be nested).",
      "alias": "dir",
      "x-priority": "important"
    },
    "pascalCaseFiles": {
      "type": "boolean",
      "description": "Use pascal case component file name (e.g. `App.vue`).",
      "alias": "P",
      "default": false
    },
    "pascalCaseDirectory": {
      "type": "boolean",
      "description": "Use pascal case directory name (e.g. `App/App.vue`).",
      "alias": "R",
      "default": false
    },
    "fileName": {
      "type": "string",
      "description": "Create a component with this file name."
    },
    "inSourceTests": {
      "type": "boolean",
      "default": false,
      "description": "When using Vitest, separate spec files will not be generated and instead will be included within the source files. Read more on the Vitest docs site: https://vitest.dev/guide/in-source.html"
    },
    "skipFormat": {
      "description": "Skip formatting files.",
      "type": "boolean",
      "default": false,
      "x-priority": "internal"
    },
    "unitTestRunner": {
      "type": "string",
      "enum": ["vitest", "jest", "none"],
      "description": "Test runner to use for unit tests.",
      "x-prompt": "What unit test runner should be used?"
    }
  },
  "required": ["name", "project"]
}
